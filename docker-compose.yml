version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vitrinealu
    volumes: [dbdata:/var/lib/postgresql/data]
    healthcheck: { test: ["CMD-SHELL","pg_isready -U postgres"], interval: 10s, retries: 5 }

  cache:
    image: redis:7
    command: ["redis-server","--save","","--appendonly","no"]
    healthcheck: { test: ["CMD","redis-cli","ping"], interval: 10s, retries: 5 }

  n8n:
    image: n8nio/n8n:latest
    ports: ["5678:5678"]
    env_file: [.env]
    environment:
      - DB_POSTGRESDB_DATABASE=vitrinealu
      - DB_POSTGRESDB_HOST=db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=postgres
      - N8N_SECURE_COOKIE=false
      - N8N_PUBLIC_URL=${PUBLIC_BASE_URL}
    depends_on: [db]
    volumes:
      - ./workflows/n8n:/home/node/.n8n
      - ./assets:/workspace/assets
      - ./config:/config
      - ./secrets:/secrets

  enhance:
    build: ./services/enhance
    env_file: [.env]
    volumes:
      - ./assets:/workspace/assets
      - ./config:/config
      - ./secrets:/secrets
    depends_on: [cache]

  video:
    build: ./services/video
    env_file: [.env]
    volumes:
      - ./assets:/workspace/assets
      - ./config:/config
    depends_on: [cache]

  scheduler:
    build: ./services/scheduler
    env_file: [.env]
    ports: ["8080:8080"]
    volumes:
      - ./assets:/workspace/assets
      - ./config:/config
    depends_on: [db,cache]

volumes:
  dbdata:


