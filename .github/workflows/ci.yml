name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

      - name: Validate Brand Config
        run: pnpm run validate-brand-config

  python-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd services/media_ingest
          conda env create -f environment.yml --force || conda env update -f environment.yml

      - name: Validate Brand Config (Python)
        run: |
          conda run -n media-ingest python scripts/validate-brand-config.py

      - name: Run Python tests
        run: |
          cd services/media_ingest
          conda run -n media-ingest python -m pytest tests/ -v

  background-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('services/background/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd services/background
          pip install -r requirements.txt pytest pytest-mock

      - name: Run background Python tests
        run: |
          cd services/background
          python -m pytest ../../../tests/services/background/ -v

      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: background-python-test-results
          path: |
            services/background/test-results.xml
            **/test_*.py::*

  background-node:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run background Node tests
        run: |
          cd apps/n8n-orchestrator
          pnpm test -- background.pipeline.spec.ts

      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: background-node-test-results
          path: |
            apps/n8n-orchestrator/test-results.xml
            **/*.spec.ts::*
